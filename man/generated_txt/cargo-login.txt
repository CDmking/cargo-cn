CARGO-LOGIN(1)

NAME
       cargo-login - Save an API token from the registry locally

SYNOPSIS
       cargo login [options] [token]

DESCRIPTION
       This command will save the API token to disk so that commands that
       require authentication, such as cargo-publish(1), will be automatically
       authenticated. The token is saved in $CARGO_HOME/credentials.toml.
       CARGO_HOME defaults to .cargo in your home directory.

       If the token argument is not specified, it will be read from stdin.

       The API token for crates.io may be retrieved from
       <https://crates.io/me>.

       Take care to keep the token secret, it should not be shared with anyone
       else.

OPTIONS
   Login Options
       --registry registry
           Name of the registry to use. Registry names are defined in Cargo
           config files
           <https://doc.rust-lang.org/cargo/reference/config.html>. If not
           specified, the default registry is used, which is defined by the
           registry.default config key which defaults to crates-io.

   Display Options
       -v, --verbose

           启用更加详细的输出。可两次使用来显示"非常详细"的输出，其中包含了诸如
           依赖警告 以及 构建脚本输出 等额外的输出内容。
           也可通过term.verbose指定。 config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

       -q, --quiet
           不输出Cargo的日志信息。也可通过term.quiet指定。
           config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

       --color when
           控制输出内容的颜色。有效取值如下：

           o  auto
              (默认)：自动检测终端是否支持带颜色的输出。

           o  always：总显示带颜色的输出。

           o  never：从不显示带颜色的输出。

           也可通过term.color指定。 config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

   Common Options
       +toolchain
           If Cargo has been installed with rustup, and the first argument to
           cargo begins with +, it will be interpreted as a rustup toolchain
           name (such as +stable or +nightly). See the rustup documentation
           <https://rust-lang.github.io/rustup/overrides.html> for more
           information about how toolchain overrides work.

       -h, --help
           Prints help information.

       -Z flag
           Unstable (nightly-only) flags to Cargo. Run cargo -Z help for
           details.

环境
       关于Cargo所读取的环境变量，可参见the reference
       <https://doc.rust-lang.org/cargo/reference/environment-variables.html>

退出状态
       o  0: Cargo命令执行成功

       o  101: Cargo命令未能完成.

EXAMPLES
       1. Save the API token to disk:

              cargo login

SEE ALSO
       cargo(1), cargo-publish(1)

